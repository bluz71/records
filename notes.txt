- Phlex:
    https://fly.io/ruby-dispatch/component-driven-development-on-rails-with-phlex
    https://judoscale.com/blog/phlex-not-erb

- Rails System Tests with Playwright instead of Selenium:
    https://justin.searls.co/posts/running-rails-system-tests-with-playwright-instead-of-selenium

- Rails 8 Authentication Generator
    https://www.bigbinary.com/blog/rails-8-introduces-a-basic-authentication-generator
    https://nithinbekal.com/posts/rails-8-auth/

- 11 HTML best practices for login & sign-up forms:
    https://evilmartians.com/chronicles/html-best-practices-for-login-and-signup-forms

    Use 'autocomplete':
      <input type="email" autocomplete="username">
      <input type="password" autocomplete="current-password">
      <input type="password" autocomplete="new-password">

    Use correct type:
      <input type="email" autocomplete="username">

    Use 'required' to force non-blank inputs:
      <input type="email" required />

- ViewComponent
    https://viewcomponent.org/

- ViewComponent templates:
    https://viewcomponent.org/guide/templates.html

- Theo:
    https://github.com/loomchild/theo-rails

- Theo ViewComponent templates:
    https://www.reddit.com/r/rails/comments/1f0ufow/comment/ljuyg0z/?utm_source=share&utm_medium=web3x&utm_name=web3xcss&utm_term=1&utm_content=share_button

    class ButtonComponent < ViewComponent::Base
      theo_template <<-THEO
        <span class%="@size"><%= content %></span>
      THEO

      def initialize(size:)
        @size = size
      end
    end

    <Button size="large" />

- Alternative rendering for ViewComponent:
    https://answers.abstractbrain.com/using-rails-helpers-x-component-for-rendering-viewcomponents
